/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Views;

import Dao.UsersDAO;
import Models.Users;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author PC
 */
public class ClientInterface extends javax.swing.JInternalFrame {
    Users user;
    UsersDAO userDAO = new UsersDAO();
    DefaultTableModel model;
    String currentImagePath = null;
    String selectedImagePath = null;    
    JDialog dialog ;
    ArrayList<Users> userstList ;
    /**
     * Creates new form ClientInterface
     */
    public ClientInterface(JFrame frame) {
        initComponents();
         dialog = new JDialog(frame);
        
    }
    
    public ClientInterface(JFrame frame , Users user) {
        initComponents();
         dialog = new JDialog(frame);
         this.user = user; 
         userstList =listUsersForAsistant( userDAO.getUserstList());
         
         if (!user.getType().equals("administrateur")) {
             typeF.setVisible(false);
           loginF.setVisible(false);
             mdpF.setVisible(false);
            loginL.setVisible(false);
            mdpL.setVisible(false);          
        }
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        updateImageButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        idUserF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        prenomF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nomF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        numTelF = new javax.swing.JTextField();
        butUpdate = new javax.swing.JButton();
        isResidF = new javax.swing.JCheckBox();
        butDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        searchField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        but_first = new javax.swing.JButton();
        but_next = new javax.swing.JButton();
        but_prev = new javax.swing.JButton();
        but_last = new javax.swing.JButton();
        emailF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cinf = new javax.swing.JTextField();
        loginL = new javax.swing.JLabel();
        loginF = new javax.swing.JTextField();
        mdpL = new javax.swing.JLabel();
        mdpF = new javax.swing.JPasswordField();
        typeF = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        addUser = new javax.swing.JButton();
        viderB = new javax.swing.JButton();

        panel.setMaximumSize(new java.awt.Dimension(1070, 640));
        panel.setMinimumSize(new java.awt.Dimension(1070, 640));

        image.setBackground(new java.awt.Color(204, 204, 204));
        image.setForeground(new java.awt.Color(255, 102, 0));
        image.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        image.setMaximumSize(new java.awt.Dimension(50, 40));
        image.setMinimumSize(new java.awt.Dimension(50, 40));

        updateImageButton.setText("Update image");
        updateImageButton.setMaximumSize(new java.awt.Dimension(130, 34));
        updateImageButton.setMinimumSize(new java.awt.Dimension(130, 34));
        updateImageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateImageButtonMouseClicked(evt);
            }
        });
        updateImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateImageButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("ID :");

        idUserF.setEditable(false);
        idUserF.setMaximumSize(new java.awt.Dimension(7, 22));
        idUserF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idUserFActionPerformed(evt);
            }
        });

        jLabel2.setText("Prénom :");

        prenomF.setMaximumSize(new java.awt.Dimension(7, 22));
        prenomF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenomFActionPerformed(evt);
            }
        });

        jLabel3.setText("Nom :");

        nomF.setMaximumSize(new java.awt.Dimension(7, 22));
        nomF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomFActionPerformed(evt);
            }
        });

        jLabel4.setText("NumTel :");

        numTelF.setMaximumSize(new java.awt.Dimension(7, 22));
        numTelF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numTelFActionPerformed(evt);
            }
        });

        butUpdate.setText("Update");
        butUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                butUpdateMouseClicked(evt);
            }
        });
        butUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUpdateActionPerformed(evt);
            }
        });

        isResidF.setText("is Residence  ");
        isResidF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isResidFActionPerformed(evt);
            }
        });

        butDelete.setText("Delete");
        butDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                butDeleteMouseClicked(evt);
            }
        });
        butDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDeleteActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client ID", "Client CIN ", "Prénom", "Nom", "numéro Tel", "Is Residence"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchFieldKeyTyped(evt);
            }
        });

        jLabel5.setText("Chercher :");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Move Fast"));

        but_first.setText("First");
        but_first.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                but_firstMouseClicked(evt);
            }
        });
        but_first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_firstActionPerformed(evt);
            }
        });

        but_next.setText("Next >>");
        but_next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                but_nextMouseClicked(evt);
            }
        });
        but_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_nextActionPerformed(evt);
            }
        });

        but_prev.setText("previous <<");
        but_prev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                but_prevMouseClicked(evt);
            }
        });
        but_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_prevActionPerformed(evt);
            }
        });

        but_last.setText("Last");
        but_last.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                but_lastMouseClicked(evt);
            }
        });
        but_last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_lastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(but_first, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(but_next, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(but_prev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(but_last, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(227, Short.MAX_VALUE)
                .addComponent(but_first, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(but_next, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(196, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(104, 104, 104)
                    .addComponent(but_prev, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(136, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(170, Short.MAX_VALUE)
                    .addComponent(but_last, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(70, 70, 70)))
        );

        emailF.setMaximumSize(new java.awt.Dimension(7, 22));

        jLabel8.setText("CIN :");

        cinf.setMaximumSize(new java.awt.Dimension(7, 22));
        cinf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cinfActionPerformed(evt);
            }
        });

        loginL.setText("Login :");

        loginF.setMaximumSize(new java.awt.Dimension(7, 22));
        loginF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginFActionPerformed(evt);
            }
        });

        mdpL.setText("Password :");

        mdpF.setMaximumSize(new java.awt.Dimension(7, 22));

        typeF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "assistant", "client", "bibliothécaire", "administrateur" }));
        typeF.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeFItemStateChanged(evt);
            }
        });
        typeF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                typeFMouseExited(evt);
            }
        });
        typeF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeFActionPerformed(evt);
            }
        });

        jLabel9.setText("Mail :");

        addUser.setText("Add");
        addUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserMouseClicked(evt);
            }
        });
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });

        viderB.setText("vider");
        viderB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viderBMouseClicked(evt);
            }
        });
        viderB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viderBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(butUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addComponent(butDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(idUserF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(prenomF, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(nomF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(isResidF)
                                .addGap(34, 34, 34)
                                .addComponent(typeF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                .addComponent(addUser, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(viderB, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(loginL)
                                    .addComponent(mdpL)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numTelF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(loginF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(cinf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(emailF, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                    .addComponent(mdpF, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))))))
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idUserF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prenomF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(nomF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(numTelF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(cinf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(loginL)
                            .addComponent(loginF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mdpL)
                            .addComponent(mdpF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(isResidF, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(butUpdate)
                            .addComponent(butDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viderB)
                            .addComponent(addUser)))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateImageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateImageButtonMouseClicked
        // TODO add your handling code here:
        chooseImage();
    }//GEN-LAST:event_updateImageButtonMouseClicked

    private void updateImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateImageButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateImageButtonActionPerformed

    private void nomFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomFActionPerformed

    private void isResidFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isResidFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isResidFActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int index = table.getSelectedRow();
        showUser(index);
        currentImagePath = null;
    }//GEN-LAST:event_tableMouseClicked

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void but_firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_firstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_but_firstActionPerformed

    private void but_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_nextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_but_nextActionPerformed

    private void but_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_prevActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_but_prevActionPerformed

    private void but_lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_lastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_but_lastActionPerformed

    private void butUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butUpdateMouseClicked
        try {
            Users usr = new Users(Integer.parseInt(idUserF.getText()), prenomF.getText(), nomF.getText(), cinf.getText(), numTelF.getText(), emailF.getText(), isResidF.isSelected(),""+ typeF.getSelectedItem(), loginF.getText(), mdpF.getText());
            userDAO.updateAdmin(usr, selectedImagePath);
        } catch (SQLException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
               viewUserssInTheTable();
 

                selectedImagePath = null;
                                      
    }//GEN-LAST:event_butUpdateMouseClicked

    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_butUpdateActionPerformed

    private void butDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_butDeleteMouseClicked
        // TODO add your handling code here:
        int id =  Integer.parseInt(idUserF.getText());
                userDAO.delete(id);
        viderFom();
        viewUserssInTheTable();
    }//GEN-LAST:event_butDeleteMouseClicked

    private void butDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_butDeleteActionPerformed

    private void but_nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_but_nextMouseClicked
        // TODO add your handling code here:
        showNext();
    }//GEN-LAST:event_but_nextMouseClicked

    private void but_prevMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_but_prevMouseClicked
        // TODO add your handling code here:
        showPrevious();
    }//GEN-LAST:event_but_prevMouseClicked

    private void but_lastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_but_lastMouseClicked
        // TODO add your handling code here:
        showLast();
    }//GEN-LAST:event_but_lastMouseClicked

    private void but_firstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_but_firstMouseClicked
        // TODO add your handling code here:
        showFirst();
    }//GEN-LAST:event_but_firstMouseClicked

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_searchFieldKeyPressed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
                search();
    }//GEN-LAST:event_searchFieldKeyReleased

    private void searchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyTyped
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_searchFieldKeyTyped

    private void idUserFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idUserFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idUserFActionPerformed

    private void numTelFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numTelFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numTelFActionPerformed

    private void prenomFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenomFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prenomFActionPerformed

    private void cinfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cinfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cinfActionPerformed

    private void loginFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginFActionPerformed

    private void typeFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeFActionPerformed

    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addUserActionPerformed

    private void addUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserMouseClicked
        if(formIsValide()){
        if(user.getType().equals("administrateur")){
            
            if(formIsValidForAdmin()){
            Users u;
            u = new Users(prenomF.getText(), nomF.getText(),cinf.getText(), numTelF.getText(), emailF.getText(), isResidF.isSelected(),(String) typeF.getSelectedItem(),loginF.getText(), mdpF.getText());
            userDAO.addSAdmin(u, selectedImagePath);
            viderFom();
            selectedImagePath = null;
            viewUserssInTheTable();
                }
            
        }
          else if(user.getType().equals("assistant")){
            
            userDAO.add(new Users(prenomF.getText(), nomF.getText(),cinf.getText(), numTelF.getText(), emailF.getText(), isResidF.isSelected()), selectedImagePath);
            viderFom();
            selectedImagePath = null;
            viewUserssInTheTable();
                }
            
            }
            
    
                
                 
    }//GEN-LAST:event_addUserMouseClicked

    private void viderBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viderBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viderBActionPerformed

    private void viderBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viderBMouseClicked
        // TODO add your handling code here:
        viderFom();
    }//GEN-LAST:event_viderBMouseClicked

    private void typeFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_typeFMouseExited
        // TODO add your handling code here:
       
    }//GEN-LAST:event_typeFMouseExited

    private void typeFItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeFItemStateChanged
        // TODO add your handling code here:
         if(typeF.getSelectedItem().equals("client")){
            loginF.setEditable(false);
            mdpF.setEditable(false);
            loginF.setText("");
            mdpF.setText("");
        
        }
        else{
            loginF.setEditable(true);
            mdpF.setEditable(true);
        }
    }//GEN-LAST:event_typeFItemStateChanged
    
  public void   viderFom(){
            idUserF.setText("");
         nomF.setText("");
                prenomF.setText("");
                numTelF.setText("");
                cinf.setText("");
                emailF.setText("");
                loginF.setText("");
                mdpF.setText("");
              
                image.setIcon(null);
                selectedImagePath = null;
    }
     public ImageIcon resizeImage(byte[] pic)
    {
        ImageIcon myImage;
 
        if(pic == null)
            myImage = new ImageIcon(this.getClass().getResource("images/no-image.jpg"));
            //myImage = new ImageIcon(this.getClass().getResource("/images/no-image.jpg"));
        else
            myImage = new ImageIcon(pic);
 
        Image tempImage = myImage.getImage().getScaledInstance(image.getWidth(), image.getHeight(), Image.SCALE_SMOOTH);
 
        return new ImageIcon(tempImage);
    }
     
    private void showUser(int index)
    {
        idUserF.setText(Integer.toString(userstList.get(index).getIdUser()));
        prenomF.setText(userstList.get(index).getNom());
        nomF.setText(userstList.get(index).getNom());
        numTelF.setText(userstList.get(index).getNumTel());
        
        loginF.setText(userstList.get(index).getLogin());
        cinf.setText(userstList.get(index).getCin());
        emailF.setText(userstList.get(index).getEmail());
        mdpF.setText(userstList.get(index).getMpd());
        typeF.setSelectedItem(userstList.get(index).getType());
      //  isResidF.setSelected(userstList.get(index).getIsResid());
         isResidF.setSelected(userstList.get(index).getIsResid());
         
       
       
        
     
 
        byte[] theImage = userstList.get(index).getImage();
        image.setIcon(resizeImage(theImage));
    }
    
    private ArrayList<Users> listUsersForAsistant( ArrayList<Users> list){
        
            if (user.getType().equals("client")){
           ArrayList<Users> secondList = new ArrayList<Users>();

            for( Users u : list) { 
            
            if (u.getType().equals("client")) {
            // do something 
            secondList.add(u);
            }}

           return secondList;}
            else{
            return list;
            }
    }
    
     public void viewUserssInTheTable()
    {
       
        
        System.out.println("Views.ClientInterface.viewUserssInTheTable()");
      

        userstList = listUsersForAsistant( userDAO.getUserstList());
        model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
 
        Object[] row = new Object[6];
 
        for(int i = 0; i<userstList.size(); i++)
        {
            row[0] = userstList.get(i).getIdUser();
            row[1] = userstList.get(i).getCin();
            row[2] = userstList.get(i).getPrenom();
            row[3] = userstList.get(i).getNom();
            row[4] = userstList.get(i).getNumTel();
            row[5] = userstList.get(i).getIsResid();
           
            model.addRow(row);
           
        }
 
    }
    
      private void chooseImage()
    {
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
 
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Select a .JPG .PNG .GIF image", "jpg", "png", "gif");
        file.setFileFilter(filter);
 
        int result = file.showOpenDialog(dialog);
 
        if(result == JFileChooser.APPROVE_OPTION) {
            try {
                byte[] selectedImage = Files.readAllBytes(file.getSelectedFile().toPath());
                image.setIcon(resizeImage(selectedImage));
                image.setText("");
                selectedImagePath = file.getSelectedFile().toPath().toString();
            }
            catch(IOException ex) {
                image.setIcon(resizeImage(null));
            }
        }
    }
      
        
  
    
    private void showFirst()
    {
        if(table.getRowCount() != 0) {
            table.setRowSelectionInterval(0, 0);
            showUser(0);
        }
    }
 
 
    private void showLast()
    {
        if(table.getRowCount() != 0) {
            table.setRowSelectionInterval(table.getRowCount()-1, table.getRowCount()-1);
            showUser(table.getRowCount()-1);
        }
    }
 
 
    private void showNext()
    {
        if(table.getSelectedRow() < table.getRowCount()-1) {
            int currentSelectedRow = table.getSelectedRow()+1;
            table.setRowSelectionInterval(currentSelectedRow, currentSelectedRow);
            showUser(currentSelectedRow);
        }
    }
 
 
    private void showPrevious()
    {
        if(table.getSelectedRow() > 0) {
            int currentSelectedRow = table.getSelectedRow()-1;
            table.setRowSelectionInterval(currentSelectedRow, currentSelectedRow);
            showUser(currentSelectedRow);
        }
    }
    
    
    
      private void search()
    {
        String keyword = searchField.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        table.setRowSorter(tr);
 
        tr.setRowFilter(RowFilter.regexFilter(keyword));
    }
      
    public boolean formIsValide(){
    
        if(nomF.getText().equals("")||prenomF.getText().equals("")||emailF.getText().equals("")||cinf.getText().equals("")||numTelF.getText().equals("")){
        
        JOptionPane.showMessageDialog(null, "il y a un champ vide");
        
        return false;
        }
        
      
        if(!numTelF.getText().matches("(\\+212|0|212)(\\d){9}")){
        JOptionPane.showMessageDialog(null, "numero de telephone invalide");
        
        return false;
        }
        
        if(!emailF.getText().matches("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$")){
        JOptionPane.showMessageDialog(null, "mail est invalide");
        
        return false;
        }
        
        if(!cinf.getText().matches("^([a-zA-Z]{1,2})((\\d){6,7}$)")){
        
         JOptionPane.showMessageDialog(null, "CIN est invalide");
        
        return false;
        }
        
  
        return true;
 
    }
       public boolean  formIsValidForAdmin(){
           if(!typeF.getSelectedItem().equals("client")){
           if(loginF.getText().equals("")||mdpF.getText().equals("")){
               JOptionPane.showMessageDialog(null, "le champ de login ou password  est vide");
           return false;
           }
           
           if(userDAO.isExistByLogin(loginF.getText()))
        {
            System.out.println("login est déjà occupé ");
             JOptionPane.showMessageDialog(null, "login est déjà occupé");
             return false;
        }
        }
        
        return true;}
 
 
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUser;
    private javax.swing.JButton butDelete;
    private javax.swing.JButton butUpdate;
    private javax.swing.JButton but_first;
    private javax.swing.JButton but_last;
    private javax.swing.JButton but_next;
    private javax.swing.JButton but_prev;
    private javax.swing.JTextField cinf;
    private javax.swing.JTextField emailF;
    private javax.swing.JTextField idUserF;
    private javax.swing.JLabel image;
    private javax.swing.JCheckBox isResidF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField loginF;
    private javax.swing.JLabel loginL;
    private javax.swing.JPasswordField mdpF;
    private javax.swing.JLabel mdpL;
    private javax.swing.JTextField nomF;
    private javax.swing.JTextField numTelF;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField prenomF;
    private javax.swing.JTextField searchField;
    private javax.swing.JTable table;
    private javax.swing.JComboBox<String> typeF;
    private javax.swing.JButton updateImageButton;
    private javax.swing.JButton viderB;
    // End of variables declaration//GEN-END:variables
}
