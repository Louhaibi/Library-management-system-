/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controllers.PenilateController;
import Models.Penalite;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author PC
 */
public class PenaliteView extends javax.swing.JInternalFrame {
    PenilateController pc = new PenilateController();
    ArrayList<Penalite>  list ;
    DefaultTableModel model;
    /**
     * Creates new form penalite
     */
    public PenaliteView() {
        initComponents();
        viewPenalitesInTheTable() ; 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        searchField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        but_add_new = new javax.swing.JButton();
        actualiser = new javax.swing.JButton();
        but_add_new2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panel.setMaximumSize(new java.awt.Dimension(1070, 640));
        panel.setMinimumSize(new java.awt.Dimension(1070, 640));

        table.setBackground(new java.awt.Color(240, 240, 240));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Penalite ID", "client ID", "Client CIN", "Reservation IDl", "Amende", "isRegler"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchFieldKeyTyped(evt);
            }
        });

        jLabel5.setText("Chercher :");

        but_add_new.setText("Regler");
        but_add_new.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                but_add_newMouseClicked(evt);
            }
        });
        but_add_new.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_add_newActionPerformed(evt);
            }
        });

        actualiser.setText("actualiser");
        actualiser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualiserMouseClicked(evt);
            }
        });
        actualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserActionPerformed(evt);
            }
        });

        but_add_new2.setText("supprimer");
        but_add_new2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                but_add_new2MouseClicked(evt);
            }
        });
        but_add_new2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                but_add_new2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(but_add_new, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(actualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(but_add_new2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(but_add_new, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(but_add_new2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(actualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyTyped
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_searchFieldKeyTyped

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_searchFieldKeyReleased

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_searchFieldKeyPressed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        int index = table.getSelectedRow();
        show(index);
        
    }//GEN-LAST:event_tableMouseClicked

    private void but_add_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_add_newActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_but_add_newActionPerformed

    private void but_add_newMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_but_add_newMouseClicked
        // TODO add your handling code here:
        
        if(table.getSelectedRow()==-1){
        JOptionPane.showMessageDialog(null, "Il n 'y a pas de ligne sélectionné");
        }
        else{
            pc.getPdao().regler((int) table.getValueAt(table.getSelectedRow(), 0));
            viewPenalitesInTheTable();
        }
       
      
    }//GEN-LAST:event_but_add_newMouseClicked

    private void actualiserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualiserMouseClicked
        // TODO add your handling code here:
        viewPenalitesInTheTable();
    }//GEN-LAST:event_actualiserMouseClicked

    private void actualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actualiserActionPerformed

    private void but_add_new2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_but_add_new2MouseClicked
        // TODO add your handling code here:
         if(table.getSelectedRow()==-1){
        JOptionPane.showMessageDialog(null, "Il n 'y a pas de ligne sélectionné");
        }
        else{
            pc.getPdao().delete((int) table.getValueAt(table.getSelectedRow(), 0));
            viewPenalitesInTheTable();
        }

    }//GEN-LAST:event_but_add_new2MouseClicked

    private void but_add_new2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_but_add_new2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_but_add_new2ActionPerformed

    private void showFirst()
    {
        if(table.getRowCount() != 0) {
            table.setRowSelectionInterval(0, 0);
            show(0);
        }
    }
 
 
    private void showLast()
    {
        if(table.getRowCount() != 0) {
            table.setRowSelectionInterval(table.getRowCount()-1, table.getRowCount()-1);
            show(table.getRowCount()-1);
        }
    }
 
 
    private void showNext()
    {
        if(table.getSelectedRow() < table.getRowCount()-1) {
            int currentSelectedRow = table.getSelectedRow()+1;
            table.setRowSelectionInterval(currentSelectedRow, currentSelectedRow);
            show(currentSelectedRow);
        }
    }
 
 
    private void showPrevious()
    {
        if(table.getSelectedRow() > 0) {
            int currentSelectedRow = table.getSelectedRow()-1;
            table.setRowSelectionInterval(currentSelectedRow, currentSelectedRow);
            show(currentSelectedRow);
        }
    }
    
    
    
      private void search()
    {
        String keyword = searchField.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        table.setRowSorter(tr);
 
        tr.setRowFilter(RowFilter.regexFilter(keyword));
    }
      
    public void show(int index){
    
    }
    
    
    
      public void viewPenalitesInTheTable() 
    {
       
        
      

        list  =  pc.getPdao().getAllListPenalite();
         model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
 
        Object[] row = new Object[6];
 
        for(int i = 0; i<list.size(); i++)
        {
            row[0] = list.get(i).getIdPenalite();
            row[1] = list.get(i).getIdUser();
            row[2] = list.get(i).getCin();
            row[3] = list.get(i).getIdRes();
            row[4] = list.get(i).getAmende();
            row[5] = list.get(i).isIsRegler();

           
            model.addRow(row);
           
        }
 
    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualiser;
    private javax.swing.JButton but_add_new;
    private javax.swing.JButton but_add_new2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField searchField;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
